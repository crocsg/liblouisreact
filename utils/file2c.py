import sys
import os
import json
import glob

NBCOL = 8

def pathtovar (path):
    vname = os.path.basename(path)
    vname = vname.replace(".", "__")
    vname = vname.replace("-", "__")
    return vname

def file2c (pathfrom, pathto, varname):
    with open(pathfrom,"rb") as fin:
        data = fin.read ()
    
    with open (pathto, "w") as fout:
        fout.write ("// Autogenerated file\n")
        fout.write ("// Do not manually modify\n")
        fout.write ("// file:{0}\n".format(os.path.basename(pathfrom)))
        fout.write ("\n")
        fout.write ("\n")
        fout.write ("#include <stdio.h>\n")
        fout.write ("#include <stdlib.h>\n")

        fout.write ("#ifdef __EMSCRIPTEN__\n")
        fout.write ("#include \"emscripten.h\"\n")
        fout.write ("#define EXPORT_CALL EMSCRIPTEN_KEEPALIVE\n")
        
        fout.write ("#endif\n")
        fout.write ("\n")
        fout.write ("uint8_t {0}[]".format(varname))
        fout.write ("={\n")
        size = len(data)
        col = 0
        for i in range (size):
            fout.write ("0x{:02x}".format (data[i]))
            if i != size - 1:
                if i % NBCOL == 0 and  i > 0:
                    fout.write (",\n")
                else:
                    fout.write (",")
            else:
                fout.write ("\n")
        fout.write ("};\n")
        fout.write ("size_t {0}_size=sizeof({0});\n".format(varname))

def build (path):
    data = {}
    with open(path) as f:
        data = json.load (f)
    
    root = ""
    if "srcdir" in data:
        root = data["srcdir"]

    if "f2c" in data:
        for filter in data["f2c"]:
            files = glob.glob (root+filter)
            for file in files:
                dst = data["dstdir"] + pathtovar(file)+".c"
                varname = pathtovar(file)
                print (file, dst)
                file2c (file, dst, varname)


if __name__ == "__main__":
    #file2c (sys.argv[1], sys.argv[2])
    build (sys.argv[1])
